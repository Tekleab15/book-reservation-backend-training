# GitHub Actions Workflow for Automating Backend Tests using Jest

name: Backend Tests

# Trigger the workflow on pushes and pull requests to the "main" branch.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    # Use GitHub's latest Ubuntu, windows and macos runner.
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20, 18]  

    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: Check out the repository code.
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up the Node.js environment.
      # This action installs Node.js version 20 on the runner.
      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # Step3: Implement Caching for performance optimization
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        

      # Step 4: Install project dependencies including jest tester.
      # "npm ci" installs dependencies cleanly using your package-lock.json.
      - name: Install Dependencies
        run: npm ci
      
      # Step 5: Run ESLint to Check Code Quality.
      - name: Run ESLint
        run: npm run lint

      # Step 6: Run tests using Jest.
      # Ensure your package.json has the test script defined as "jest".
      - name: Run Tests
        run: npm test
            